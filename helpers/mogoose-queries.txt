Group by Name and total

db.statements.aggregate({
    $group : {
        _id: "$name",
        total: {$sum : 1}
    }
})


Group by name and get average spend

db.statements.aggregate({
    $group : {
        _id: "$name",
        avgSpend: {$avg : "$amount"}
    }
})

Group by name and show max spend (but be careful because spend is a negative number so this shows min spend! - need to use $min not $max)

db.statements.aggregate({
    $group : {
        _id: "$name",
        maxSpend: {$max : "$amount"}
    }
})



Use $project to change all names to lowercase

db.statements.aggregate([{
    $project :
        {name:
            {$toLower:"$name"}, _id:0}
}])



Include the year, month number, week number and day number in query

db.statements.aggregate([{
        $project : {
            year : {
                $year : "$date"
            },
            month : {
                $month : "$date"
            },
            week : {
                $week : "$date"
            },
            day : {
                $dayOfWeek : "$date"
            },
            _id : 1,
            name : 1
        }
    }
    ]
    )



Total Daily spend on each year/month/week/day


    db.statements.aggregate([{
        $project : {
            year : {
                $year : "$date"
            },
            month : {
                $month : "$date"
            },
            week : {
                $week : "$date"
            },
            day : {
                $dayOfWeek : "$date"
            },
            _id : 1,
            name : 1,
            amount:1
        }
    },
    {
               $group : {
                   _id : {
                       year : "$year",
                       month : "$month",
                       week : "$week",
                       day : "$day"
                   },
                   totalDailyAmount : {
                       $sum : "$amount"
                   }
               }
           }
    ]
    )







Total spend grouped by year/month/week



     db.statements.aggregate([{
        $project : {
            year : {
                $year : "$date"
            },
            month : {
                $month : "$date"
            },
            week : {
                $week : "$date"
            },
            day : {
                $dayOfWeek : "$date"
            },
            _id : 1,
            name : 1,
            amount:1
        }
    },
    {
        $group : {
            _id : {
               year : "$year",
               month : "$month",
               week : "$week",
               day : "$day"
               },
               totalDailyAmount : {
                   $sum : "$amount"
            }
        }
    },
    {
        $group : {

            _id : {
                year : "$_id.year",
                month : "$_id.month",
                week : "$_id.week"
            },
            totalWeeklyAmount : {
                $sum : "$totalDailyAmount"
            },
            totalDayAmount : {
                $push : {
                    totalDayAmount : "$totalDailyAmount",
                    dayOfWeek : "$_id.day"
                }
            }
        }
    }
    ]
    )
    



Get records for just particular month or week in a month


db.statements.aggregate([{
        $project : {
            year : {
                $year : "$date"
            },
            month : {
                $month : "$date"
            },
            week : {
                $week : "$date"
            },
            day : {
                $dayOfWeek : "$date"
            },
            _id : 1,
            name : 1,
            amount:1
        }
    },
    {
               $group : {
                   _id : {
                       year : "$year",
                       month : "$month",
                       week : "$week",
                       day : "$day"
                   },
                   totalDailyAmount : {
                       $sum : "$amount"
                   }
               }
           },
    {
        $group : {

            _id : {
                year : "$_id.year",
                month : "$_id.month",
                week : "$_id.week"
            },
            totalWeeklyAmount : {
                $sum : "$totalDailyAmount"
            },
            totalDayAmount : {
                $push : {
                    totalDayAmount : "$totalDailyAmount",
                    dayOfWeek : "$_id.day"
                }
            }
        }
    }, {
        $match : {
            "_id.month" : 3,
            "_id.week" : 12
        }
    }
    ]
    )

FIND ALL RINGGO ENTRIES AND AGGREGATE
db.statements.aggregate([{
$match:{name:"RINGGO"}},{
$project:{
            year : {
                $year : "$date"
            },
            month : {
                $month : "$date"
            },
            week : {
                $week : "$date"
            },
            day : {
                $dayOfWeek : "$date"
            },
            _id : 1,
            name : 1
        }
}
])



Day / week / month matched to vendor

db.statements.aggregate([{
$match:{name:"RINGGO"}},{
$project:{
            year : {
                $year : "$date"
            },
            month : {
                $month : "$date"
            },
            week : {
                $week : "$date"
            },
            day : {
                $dayOfWeek : "$date"
            },
            _id : 1,
            name : 1,
            amount: 1
        }
},
    {
               $group : {
                   _id : {
                       year : "$year",
                       month : "$month",
                       week : "$week",
                       day : "$day"
                   },
                   totalDailyAmount : {
                       $sum : "$amount"
                   }
               }
           },
    {
        $group : {

            _id : {
                year : "$_id.year",
                month : "$_id.month",
                week : "$_id.week"
            },
            totalWeeklyAmount : {
                $sum : "$totalDailyAmount"
            },
            totalDayAmount : {
                $push : {
                    totalDayAmount : "$totalDailyAmount",
                    dayOfWeek : "$_id.day"
                }
            }
        }
    }
])


AMOUNT GROUPED BY VENDOR

db.statements.aggregate(
   [
      
        
           { $group : { _id : "$name", amount: { $push: "$amount" } } }
        
      
   ]
)


SO ANSWER

db.statements.aggregate([
    {
        "$group": {
            "_id": {
                "name": "$name",
                "year": { "$year": "$date" },
                "month": { "$month": "$date" },
                "week": { "$week": "$date" }
            },
            "total": { "$sum": "$amount" }
        }
    },
    {
        "$group": {
            "_id": {
                "name": "$_id.name",
                "year": "$_id.year"
            },
            "YearlySpends": { "$push": "$total" },
            "totalYearlyAmount": { "$sum": "$total" },
            "data": { "$push": "$$ROOT" }
        }
    },
    { "$unwind": "$data" },
    {
        "$group": {
            "_id": {
                "name": "$_id.name",
                "month": "$data._id.month"
            },
            "YearlySpends": { "$first": "$YearlySpends" },
            "totalYearlyAmount": { "$first": "$totalYearlyAmount" },
            "MonthlySpends": { "$push": "$data.total" },
            "totalMonthlyAmount": { "$sum": "$data.total" },
            "data": { "$push": "$data" }
        }
    },
    { "$unwind": "$data" },
    {
        "$group": {
            "_id": {
                "name": "$_id.name",
                "week": "$data._id.week"
            },
            "YearlySpends": { "$first": "$YearlySpends" },
            "totalYearlyAmount": { "$first": "$totalYearlyAmount" },
            "MonthlySpends": { "$first": "$MonthlySpends" },
            "totalMonthlyAmount": { "$first": "$totalMonthlyAmount" },
            "WeeklySpends": { "$push": "$data.total" },
            "totalWeeklyAmount": { "$sum": "$data.total" },
            "data": { "$push": "$data" }
        }
    },
    { "$unwind": "$data" },
    {
        "$group": {
            "_id": "$data._id",
            "YearlySpends": { "$first": "$YearlySpends" },
            "totalYearlyAmount": { "$first": "$totalYearlyAmount" },
            "MonthlySpends": { "$first": "$MonthlySpends" },
            "totalMonthlyAmount": { "$first": "$totalMonthlyAmount" },
            "WeeklySpends": { "$first": "$WeeklySpends" },
            "totalWeeklyAmount": { "$first": "$totalWeeklyAmount" }
        }
    }
])



query to allow yuo search by vendor, year, month and week

db.statements.aggregate([
    { "$match": { "name": "RINGGO" } },
    {
    "$redact": {
        "$cond": [
            {
                "$and": [
                     { "$eq": [{ "$year": "$date" },  parseInt(req.params.year)  ]},
                     { "$eq": [{ "$month": "$date" }, parseInt(req.params.month) ]},
                     { "$eq": [{ "$week": "$date" },  parseInt(req.params.week)  ]}
                ]
            },
            "$$KEEP",
            "$$PRUNE"
        ]
    }
},{
        "$group": {
            "_id": {
                "name": "$name",
                "year": { "$year": "$date" },
                "month": { "$month": "$date" },
                "week": { "$week": "$date" }
            },
            "total": { "$sum": "$amount" }
        }
    },
    {
        "$group": {
            "_id": {
                "name": "$_id.name",
                "year": "$_id.year"
            },
            "YearlySpends": { "$push": "$total" },
            "totalYearlyAmount": { "$sum": "$total" },
            "data": { "$push": "$$ROOT" }
        }
    },
    { "$unwind": "$data" },
    {
        "$group": {
            "_id": {
                "name": "$_id.name",
                "month": "$data._id.month"
            },
            "YearlySpends": { "$first": "$YearlySpends" },
            "totalYearlyAmount": { "$first": "$totalYearlyAmount" },
            "MonthlySpends": { "$push": "$data.total" },
            "totalMonthlyAmount": { "$sum": "$data.total" },
            "data": { "$push": "$data" }
        }
    },
    { "$unwind": "$data" },
    {
        "$group": {
            "_id": {
                "name": "$_id.name",
                "week": "$data._id.week"
            },
            "YearlySpends": { "$first": "$YearlySpends" },
            "totalYearlyAmount": { "$first": "$totalYearlyAmount" },
            "MonthlySpends": { "$first": "$MonthlySpends" },
            "totalMonthlyAmount": { "$first": "$totalMonthlyAmount" },
            "WeeklySpends": { "$push": "$data.total" },
            "totalWeeklyAmount": { "$sum": "$data.total" },
            "data": { "$push": "$data" }
        }
    },
    { "$unwind": "$data" },
    {
        "$group": {
            "_id": "$data._id",
            "YearlySpends": { "$first": "$YearlySpends" },
            "totalYearlyAmount": { "$first": "$totalYearlyAmount" },
            "MonthlySpends": { "$first": "$MonthlySpends" },
            "totalMonthlyAmount": { "$first": "$totalMonthlyAmount" },
            "WeeklySpends": { "$first": "$WeeklySpends" },
            "totalWeeklyAmount": { "$first": "$totalWeeklyAmount" }
        }
    }
])



JUST YEARLY TOTALS AND SPEND FOR A VENDOR

db.statements.aggregate([
    { "$match": { "name": "RINGGO" } },
    {
    "$redact": {
        "$cond": [
            {
                "$and": [
                     { "$eq": [{ "$year": "$date" },  2017  ]}
                ]
            },
            "$$KEEP",
            "$$PRUNE"
        ]
    }
},{
        "$group": {
            "_id": {
                "name": "$name",
                "year": { "$year": "$date" },
                "month": { "$month": "$date" },
                "week": { "$week": "$date" }
            },
            "total": { "$sum": "$amount" }
        }
    },
    {
        "$group": {
            "_id": {
                "name": "$_id.name",
                "year": "$_id.year"
            },
            "YearlySpends": { "$push": "$total" },
            "totalYearlyAmount": { "$sum": "$total" },
            "data": { "$push": "$$ROOT" }
        }
    }
])
